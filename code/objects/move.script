local config = require "code.config"
local State = require "code.state"
local EventBus = require "code.modules.utils.eventbus"

function init(self)
  local id = go.get_id()
  self.simulate = false

  EventBus:subscribe(config.ON_INIT_MOVE, id)
  EventBus:subscribe(config.ON_STOP_MOVE, id)
end

function on_message(self, message_id, message)
  if message_id == config.ON_INIT_MOVE and not self.simulate then
    self.simulate = true
  end

  if message_id == config.ON_STOP_MOVE then
    self.simulate = false
  end
end

function update(self, dt) 
  if not self.simulate then
    return
  end

  simulate(self, dt)
end

function simulate(self, dt)
  for _, unit in ipairs(State.context.units) do
    local pos = unit.position
    local vel = unit.velocity

    vel = vel + unit.mass * config.GRAVITY * config.AXIS_GRAVITY * dt
    pos = pos + vel * dt

    unit.velocity = vel
    unit:set_position(pos) 
  end
end
