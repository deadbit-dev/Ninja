local config = require "code.config"
local State = require "code.state"
local EventBus = require "code.modules.utils.eventbus"

function init(self)
  local id = go.get_id()
  self.simulate = false

  EventBus:subscribe(config.ON_INIT_ROTATE, id)
  EventBus:subscribe(config.ON_STOP_ROTATE, id)
end

function on_message(self, message_id, message)
  if message_id == config.ON_INIT_ROTATE and not self.simulate then
    self.simulate = true
  end

  if message_id == config.ON_STOP_ROTATE then
    self.simulate = false
  end
end

function update(self, dt) 
  if not self.simulate then
    return
  end

  simulate(self, dt)
end

function simulate(self, dt)
  for _, unit in ipairs(State.context.units) do
    local rot = unit.rotation
    local torque = unit.torque

    unit:set_rotation(rot + torque) 
  end
end

