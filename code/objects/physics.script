local config = require "code.config"
local State = require "code.state"
local EventBus = require "code.modules.utils.eventbus"

function init(self)
  local id = go.get_id()
  self.simulate = false

  EventBus:subscribe(config.ON_SIMULATE_PHYSICS, id)
  EventBus:subscribe(config.ON_STOP_PHYSICS, id)
  EventBus:subscribe(config.ON_ADD_FORCE, id)
end

function on_message(self, message_id, message)
  if message_id == config.ON_SIMULATE_PHYSICS then
    self.simulate = true
  end

  if message_id == config.ON_STOP_PHYSICS then
    self.simulate = false
  end

  if message_id == config.ON_ADD_FORCE then
    add_force(message.unit, message.angle, message.force)
  end
end

function update(self, dt) 
  if not self.simulate then
    return
  end

  simulate(self, dt)
end

function simulate(self, dt)
  for url, meta in pairs(State.context.units) do
    local pos = go.get_position(url)
    local vel = meta.velocity

    vel = vel + meta.mass * config.GRAVITY * config.AXIS_GRAVITY * dt
    pos = pos + vel * dt

    meta.velocity = vel
    go.set_position(pos, url)
  end
end

function add_force(id, angle, force)
  local unit = State.context.units[id]
  unit.velocity = unit.velocity + vmath.vector3(math.cos(angle), math.sin(angle), 0) * force
end