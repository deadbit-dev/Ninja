local config = require "code.config"
local state = require "code.state"
local EventBus = require "code.modules.utils.eventbus"
local Spawner = require "code.modules.spawn.spawner"

function init(self)
  self.id = go.get_id()
  self.instance = Spawner(config.GAME_FIELD, config.SPAWN_ZONES)

  EventBus:subscribe(config.ON_START_SPAWN, self.id)
  EventBus:subscribe(config.ON_STOP_SPAWN, self.id)
end

function on_message(self, message_id)
  if message_id == config.ON_START_SPAWN then
    self.timer = timer.delay(state.spawn_interval, true, spawn_pack)
  end

  if message_id == config.ON_STOP_SPAWN then
    timer.cancel(self.timer)
  end
end

function spawn_pack(self)
  self.pack = config.SPAWN_PACK
  self.delay = state.spawn_interval / state.units_by_pack
  self.count = 0
  
  spawn_unit(self)
end

function spawn_unit(self)
  if self.count == state.units_by_pack then 
    return
  end

  local prefab = msg.url(nil, self.pack:get_id(), self.pack:get_random():get_id())
  local unit = self.instance:spawn(prefab)

  table.insert(state.units, unit)
  EventBus:emit(config.ON_SPAWN_UNIT, {unit = unit})

  self.count = self.count + 1  
  timer.delay(self.delay, false, spawn_unit)
end